#include <iostream>
#include <sstream>
#include <vector>

using namespace std;

struct Book {
    int id;
    string title;
    string author;
    string publisher;
    string year;
    string genre;
    int pages;
};

vector<Book> books;
int next_id = 1;

void create_book(const string& title, const string& author, const string& publisher, const string& year, const string& genre, int pages) {
    Book new_book = {next_id++, title, author, publisher, year, genre, pages};
    books.push_back(new_book);
    cout << "Buku berhasil ditambahkan." << endl;
}

void get_books() {
    if (books.empty()) {
        cout << "Tidak ada buku yang tersedia." << endl;
        return;
    }
    
    for (const auto& book : books) {
        cout << "ID: " << book.id
             << ", Judul: " << book.title
             << ", Pengarang: " << book.author
             << ", Penerbit: " << book.publisher
             << ", Tahun: " << book.year
             << ", Genre: " << book.genre
             << ", Halaman: " << book.pages << endl;
    }
}

void search_books_by_title(const string& title) {
    bool found = false;
    for (const auto& book : books) {
        if (book.title.find(title) != string::npos) {
            cout << "ID: " << book.id
                 << ", Judul: " << book.title
                 << ", Pengarang: " << book.author
                 << ", Penerbit: " << book.publisher
                 << ", Tahun: " << book.year
                 << ", Genre: " << book.genre
                 << ", Halaman: " << book.pages << endl;
            found = true;
        }
    }
    if (!found) {
        cout << "Tidak ada buku dengan judul tersebut." << endl;
    }
}

void search_books_by_author(const string& author) {
    bool found = false;
    for (const auto& book : books) {
        if (book.author.find(author) != string::npos) {
            cout << "ID: " << book.id
                 << ", Judul: " << book.title
                 << ", Pengarang: " << book.author
                 << ", Penerbit: " << book.publisher
                 << ", Tahun: " << book.year
                 << ", Genre: " << book.genre
                 << ", Halaman: " << book.pages << endl;
            found = true;
        }
    }
    if (!found) {
        cout << "Tidak ada buku dengan pengarang tersebut." << endl;
    }
}

void update_book(int book_id, const string& title, const string& author, const string& publisher, const string& year, const string& genre, int pages) {
    for (auto& book : books) {
        if (book.id == book_id) {
            book.title = title;
            book.author = author;
            book.publisher = publisher;
            book.year = year;
            book.genre = genre;
            book.pages = pages;
            cout << "Buku berhasil diperbarui." << endl;
            return;
        }
    }
    cout << "Buku dengan ID tersebut tidak ditemukan." << endl;
}

void delete_book(int book_id) {
    for (auto it = books.begin(); it != books.end(); ++it) {
        if (it->id == book_id) {
            books.erase(it);
            cout << "Buku berhasil dihapus." << endl;
            return;
        }
    }
    cout << "Buku dengan ID tersebut tidak ditemukan." << endl;
}

void admin_menu();
void user_menu();

void admin_menu() {
    int choice;
    while (true) {
        cout << "\nMenu Admin:\n";
        cout << "1. Tambah Buku\n";
        cout << "2. Tampilkan Semua Buku\n";
        cout << "3. Cari Buku Berdasarkan Judul\n";
        cout << "4. Cari Buku Berdasarkan Pengarang\n";
        cout << "5. Perbarui Buku\n";
        cout << "6. Hapus Buku\n";
        cout << "7. Beralih ke Menu User\n";
        cout << "8. Keluar\n";
        cout << "Masukkan pilihan: ";
        cin >> choice;

        if (choice == 1) {
            string title, author, publisher, year, genre;
            int pages;
            cout << "Masukkan judul: ";
            cin.ignore();
            getline(cin, title);
            cout << "Masukkan pengarang: ";
            getline(cin, author);
            cout << "Masukkan penerbit: ";
            getline(cin, publisher);
            cout << "Masukkan tahun: ";
            getline(cin, year);
            cout << "Masukkan genre: ";
            getline(cin, genre);
            cout << "Masukkan jumlah halaman: ";
            cin >> pages;
            create_book(title, author, publisher, year, genre, pages);
        } else if (choice == 2) {
            get_books();
        } else if (choice == 3) {
            string title;
            cout << "Masukkan judul: ";
            cin.ignore();
            getline(cin, title);
            search_books_by_title(title);
        } else if (choice == 4) {
            string author;
            cout << "Masukkan pengarang: ";
            cin.ignore();
            getline(cin, author);
            search_books_by_author(author);
        } else if (choice == 5) {
            int book_id;
            string title, author, publisher, year, genre;
            int pages;
            cout << "Masukkan ID buku yang akan diperbarui: ";
            cin >> book_id;
            cin.ignore();
            cout << "Masukkan judul baru: ";
            getline(cin, title);
            cout << "Masukkan pengarang baru: ";
            getline(cin, author);
            cout << "Masukkan penerbit baru: ";
            getline(cin, publisher);
            cout << "Masukkan tahun baru: ";
            getline(cin, year);
            cout << "Masukkan genre baru: ";
            getline(cin, genre);
            cout << "Masukkan jumlah halaman baru: ";
            cin >> pages;
            update_book(book_id, title, author, publisher, year, genre, pages);
        } else if (choice == 6) {
            int book_id;
            cout << "Masukkan ID buku yang akan dihapus: ";
            cin >> book_id;
            delete_book(book_id);
        } else if (choice == 7) {
            user_menu();
            break;
        } else if (choice == 8) {
            break;
        } else {
            cout << "Pilihan tidak valid. Silakan coba lagi." << endl;
        }
    }
}

void user_menu() {
    int choice;
    while (true) {
        cout << "\nMenu User:\n";
        cout << "1. Tampilkan Semua Buku\n";
        cout << "2. Cari Buku Berdasarkan Judul\n";
        cout << "3. Cari Buku Berdasarkan Pengarang\n";
        cout << "4. Beralih ke Menu Admin\n";
        cout << "5. Keluar\n";
        cout << "Masukkan pilihan: ";
        cin >> choice;

        if (choice == 1) {
            get_books();
        } else if (choice == 2) {
            string title;
            cout << "Masukkan judul: ";
            cin.ignore();
            getline(cin, title);
            search_books_by_title(title);
        } else if (choice == 3) {
            string author;
            cout << "Masukkan pengarang: ";
            cin.ignore();
            getline(cin, author);
            search_books_by_author(author);
        } else if (choice == 4) {
            admin_menu();
            break;
        } else if (choice == 5) {
            break;
        } else {
            cout << "Pilihan tidak valid. Silakan coba lagi." << endl;
        }
    }
}

int main() {
    int role;
    cout << "Masukkan peran Anda (1 untuk Admin, 2 untuk User): ";
    cin >> role;

    if (role == 1) {
        admin_menu();
    } else if (role == 2) {
        user_menu();
    } else {
        cout << "Peran tidak valid. Program akan keluar." << endl;
    }

    return 0;
}
